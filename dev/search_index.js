var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CryptoDatasets","category":"page"},{"location":"#CryptoDatasets","page":"Home","title":"CryptoDatasets","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for CryptoDatasets.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Hello, World!","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CryptoDatasets]","category":"page"},{"location":"#CryptoDatasets.Candle","page":"Home","title":"CryptoDatasets.Candle","text":"A candle containing a timestamp, OHLCV values, and an optional v2 for weird exchanges that return 2 volumes.\n\n\n\n\n\n","category":"type"},{"location":"#CryptoDatasets._sanitize-Tuple{Any}","page":"Home","title":"CryptoDatasets._sanitize","text":"_sanitize()\n\nTake a row from the JSON import and make it suitable for writing out as a CSV row.\n\nExamples\n\njulia> CryptoDatasets._sanitize([1636675140000, 1, 2, 0.5, 1, 1])\n7-element Vector{Any}:\n 1.63667514e12\n 1.0\n 2.0\n 0.5\n 1.0\n 1.0\n  missing\n\n\n\n\n\n","category":"method"},{"location":"#CryptoDatasets.dataset-Tuple{Any, Any}","page":"Home","title":"CryptoDatasets.dataset","text":"dataset(exchange, market; tf::Period, dates) => Vector{Any}\n\nReturn OHLC candles for the given exchange and market.\n\n\n\n\n\n","category":"method"},{"location":"#CryptoDatasets.import_json!-Tuple{Any, Any}","page":"Home","title":"CryptoDatasets.import_json!","text":"import_json!(exchange, market, timeframe)\n\nImport data from a previous project of mine that stored this info in JSON files.\n\n\n\n\n\n","category":"method"}]
}
